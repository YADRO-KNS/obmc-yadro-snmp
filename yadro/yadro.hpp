/**
 * @brief SNMP Agent definitions
 *
 * This file is part of phosphor-snmp project.
 *
 * Copyright (c) 2018 YADRO
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @author: Alexander Filippov <a.filippov@yadro.com>
 *
 * Note: this file originally auto-generated by mib2c using
 */
#pragma once

#include "watcher.hpp"
#include <thread>

class yadrowatcher : public dbuswatcher
{
    public:

        yadrowatcher(void);
        virtual ~yadrowatcher(void);

        void start(void);
        void stop(void);

    protected:

        void powerStateChanged(int prev) override;
        void sensorChangeState(sensor_t* sensor,
                               const std::string& type,
                               sensor_t::state_t prev) override;

        void sendTrap(const oid* trap_oid,
                      size_t trap_oid_len,
                      const oid* field_oid,
                      size_t field_oid_len,
                      int field_value);
    private:

        std::thread     m_thread;
};

#ifdef __cplusplus
extern "C" {
#endif

/* function declarations */
void  init_yadro(void);
void  shutdown_yadro(void);

#ifdef __cplusplus
}
#endif

